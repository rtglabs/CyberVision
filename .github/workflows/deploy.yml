name: Deploy to AWS CodeDeploy

on:
  push:
    branches:
      - main  # Adjust if your main branch is named differently

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Run build
      env:
        CI: false  # Disable treating warnings as errors
      run: npm run build

    - name: Zip files
      run: zip -r latest.zip .

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2  # Replace with your AWS region

    - name: Upload to S3
      run: aws s3 cp latest.zip s3://cybervision-deployments/latest.zip  # Replace with your S3 bucket name

    - name: Deploy to AWS CodeDeploy
      run: |
        aws deploy create-deployment \
          --application-name CyberVision  # Replace with your CodeDeploy application name
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name CyberVisionDeploymentGroup  # Replace with your CodeDeploy deployment group name
          --description "Deployment from GitHub Actions" \
          --s3-location bucket=cybervision-deployments,bundleType=zip,key=latest.zip  # Replace with your S3 bucket name and key
      env:
        AWS_DEFAULT_REGION: us-east-2
        AWS_REGION: us-east-2
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
